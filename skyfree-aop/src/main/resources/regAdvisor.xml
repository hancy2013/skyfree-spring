<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean id="waiterTarget" class="com.skyfree.aspect.regex.Waiter"/>
    <bean id="sellerTarget" class="com.skyfree.aspect.regex.Seller"/>
    <bean id="greetingBeforeAdvice" class="com.skyfree.aspect.GreetingBeforeAdvice"/>
    
    <!-- 通过advisor传入给ProxyFactoryBean可以控制切点信息了,这里指定了方法含有greet关键字的方法
        注意这里的方法名称是全名:com.skyfree.aspect.regex.Waiter.greetTo
        如果需要进行多个pattern匹配,可以使用patterns属性
    -->
    <bean id="regexAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" 
          p:advice-ref="greetingBeforeAdvice" p:pattern=".*greet.*"/>
    
    <!-- 
        1. target: 代理的目标对象
        2. proxyInterfaces,别名interfaces, 指定代理实现的接口,可以指定多个接口
        3. interceptorNames: 指定advice,可以指定多个advice
        4. singleton: 返回的代理对象是否为单例,默认为单例
        5. optimize: 是否优化,true: 使用CGLIB, 特点创建慢,执行快; false:使用JDK代理,特点:创建快,执行慢
        6. proxyTargetClass: true/false, true:使用CGLIB代理
    -->
    <bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="regexAdvisor"
          p:proxyTargetClass="true" p:optimize="true" abstract="true"/>
    
    <bean id="waiter" parent="proxy" p:target-ref="waiterTarget"/>
    
    <!-- 这个不会有加强的效果 应为GreetingAdvisor中已经过滤掉了-->
    <bean id="seller" parent="proxy" p:target-ref="sellerTarget"/>

</beans>